[tool.black]
line-length = 110
target-version = ['py37', 'py38', 'py39', 'py310']
include = '(app|tests)/.*\.pyi?$'

[tool.poetry]
name = "notification-document-download-api"
version = "0.1.0"
description = "Document Download API"
authors = ["Canadian Digital Service"]
license = "MIT license"
readme = "README.md"
packages = []

[build-system]
requires = ["poetry>=1.3.2"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "~3.10.9"
Flask = "2.3.3"
Flask-Env = "2.0.0"

python-dotenv = "1.0.0"
python-magic = "0.4.27"
PyYAML = "6.0.1"

# PaaS

gunicorn = "20.1.0"
gevent = "23.9.0"

awscli-cwlogs = "1.4.6"

notifications-utils = { git = "https://github.com/cds-snc/notifier-utils.git", tag = "52.1.5"}

requests = { extras = ["security"], version = "*" }
pycryptodome = "*"

[tool.poetry.group.test.dependencies]
black = "23.3.0"
flake8 = "6.0.0"
freezegun = "1.2.2"
mypy = "1.0.1"
monkeytype = "23.3.0"
poethepoet = "^0.24.4"

pytest = "7.2.0"
pytest-env = "0.8.1"
pytest-mock = "3.10.0"
pytest-cov = "3.0.0"

requests-mock = "1.10.0"
types-requests = "2.28.11"

coveralls = "1.11.1"

jinja2-cli = { extras = ["yaml"], version = "0.8.2" }


# Poe the Poet tasks
[tool.poe.tasks.trace-app]
help = "Runs the app with monkeytype type collection enabled."
shell = """
        monkeytype run -m flask run -p 7000 --host=0.0.0.0
"""

[tool.poe.tasks.trace-tests]
help = "Runs a test suite or single test through MonkeyType, generating a record of type annotation traces monkeytype.sqlite3"
shell = """
    if [ -z "${method}" ]; then
        monkeytype run -m pytest '/tests/app/${test-path}::${method}'
    else
        monkeytype run -m pytest '/tests/app/${test-path}'
    fi
"""
    # Define arguments for trace-tests
    [tool.poe.tasks.trace-tests.args.test-path]
    help = "Path to the test file to run. /tests/app/ can be omitted. e.g. poe trace-tests -p main/test_contact.py"
    options = ["-p", "--path"]
    type = "string"
    required = true

    [tool.poe.tasks.trace-tests.args.method]
    help = "Name of the test method to execute and trace"
    options = ["-m", "--method"]
    type = "string"
    default = ""
    required = false

[tool.poe.tasks.list-modules]
help = "Lists all files and modules that have trace data associated with them in monkeytype.sqlite3"
cmd = "monkeytype list-modules"

# Composite task that uses list-modules to obtain a list of files and modules
[tool.poe.tasks.apply-annotations]
help = "Applies ALL known type annotations stored in monkeytype.sqlite3"
shell = """
    for trace in ${TRACES}
    do
        monkeytype apply $trace
    done
"""
deps = ["list-modules"]
uses = { TRACES = "list-modules"}