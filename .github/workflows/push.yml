on: push
name: Continuous Integration
jobs:
  test:
    name: Continuous integration tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
    - name: Set up Python 3.10
      uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435 # v4.5.0
      with:
        python-version: '3.10'
    - name: Upgrade pip
      run: python -m pip install --upgrade pip

    - uses: actions/cache@6998d139ddd3e68c71e9e398d8e40b71a2f39812 # v3.2.5
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements-dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install poetry
      env:
        POETRY_VERSION: "1.3.0"
      run: pip install poetry==${POETRY_VERSION} && poetry --version

    - name: Install dependencies
      run: poetry install

    - name: Run tests
      run: poetry run make test

    - name: Get python version
      run: |
        python_version=$(python  -V | cut -d' ' -f2)
        echo "python_version=${python_version}" >> $GITHUB_ENV

    - name: Copy site-packages in workspace
      working-directory: ${{ github.workspace }}
      shell: bash
      run: |
        mkdir -p "${{ github.workspace }}/env/" && cp -fR $(poetry env list | poetry env info -p)/lib/python3.10/site-packages "${{ github.workspace }}/env/"

    - name: Install development .env file
      working-directory: ${{ github.workspace }}
      shell: bash
      run: |
        cp -f .env.example .env

    - name: Checks for new endpoints against AWS WAF rules
      uses: cds-snc/notification-utils/.github/actions/waffles@d70335dbab2a1a6f12de99f9256b179312e2aef5 # 49.1.0
      with:
        app-loc: '/github/workspace'
        app-libs: '/github/workspace/env/site-packages'
        flask-mod: 'application'
        flask-prop: 'application'
        base-url: 'https://api.document.staging.notification.cdssandbox.xyz'
