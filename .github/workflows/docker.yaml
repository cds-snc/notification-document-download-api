name: Build, push to AWS ECR, and deploy
on:
  push:
    branches:
      - main

env:
  AWS_REGION: ca-central-1
  DOCKER_ORG: public.ecr.aws/cds-snc
  DOCKER_SLUG: public.ecr.aws/cds-snc/notify-document-download-api
  OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN_STAGING }}

permissions:
  id-token: write   # This is required for requesting the OIDC JWT
  contents: read    # This is required for actions/checkout

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Build and push
    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
    - name: Install AWS CLI
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip -q awscliv2.zip
        sudo ./aws/install --update
        aws --version

    - name: Configure credentials to CDS public ECR using OIDC
      uses: aws-actions/configure-aws-credentials@5fd3084fc36e372ff1fff382a39b10d03659f355 # v2.2.0
      with:
        role-to-assume: arn:aws:iam::283582579564:role/notification-document-download-api-apply
        role-session-name: NotifyDocumentDownloadApiGitHubActions
        aws-region: "us-east-1"

    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@5a88a04c91d5c6f97aae0d9be790e64d9b1d47b7 # v1.7.1
      with:
        registry-type: public

    - name: Build
      run: |
        docker build --build-arg GIT_SHA=${GITHUB_SHA::7} -t $DOCKER_SLUG:${GITHUB_SHA::7} -t $DOCKER_SLUG:latest -f ci/Dockerfile .
    - name: Publish
      run: |
        docker push $DOCKER_SLUG:latest && docker push $DOCKER_SLUG:${GITHUB_SHA::7}

    - name: Configure credentials to Notify account using OIDC
      uses: aws-actions/configure-aws-credentials@5fd3084fc36e372ff1fff382a39b10d03659f355 # v2.2.0
      with:
        role-to-assume: arn:aws:iam::239043911459:role/notification-document-download-api-apply
        role-session-name: NotifyDocumentDownloadApiGitHubActions
        aws-region: "ca-central-1"

    - name: Setup Terraform tools
      uses: cds-snc/terraform-tools-setup@v1
      env: # In case you want to override default versions
        CONFTEST_VERSION: 0.30.0 
        TERRAFORM_VERSION: 1.9.5
        TERRAGRUNT_VERSION: 0.66.9
        TF_SUMMARIZE_VERSION: 0.2.3                           

    - name: Set Docker Tag
      run: echo "DOCKER_TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV
      env:
        GITHUB_SHA: ${{ github.sha }}
  
    - name: Update images in staging (Helm)
      run: |
        curl -L \
        -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.MANIFESTS_WORKFLOW_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/cds-snc/notification-manifests/dispatches \
          -d '{"event_type":"update-docker-image","client_payload":{"component":"DOCUMENT_DOWNLOAD","docker_tag":"${{ env.DOCKER_TAG }}"}}'

    - name: my-app-install token
      id: notify-pr-bot
      uses: getsentry/action-github-app-token@97c9e23528286821f97fba885c1b1123284b29cc # v2.0.0
      with:
        app_id: ${{ secrets.NOTIFY_PR_BOT_APP_ID }}
        private_key: ${{ secrets.NOTIFY_PR_BOT_PRIVATE_KEY }}

    - uses: cds-snc/notification-pr-bot@main
      env:
        TOKEN: ${{ steps.notify-pr-bot.outputs.token }}

    - name: Generate docker SBOM
      uses: cds-snc/security-tools/.github/actions/generate-sbom@34794baf2af592913bb5b51d8df4f8d0acc49b6f # v3.2.0
      env:
        TRIVY_DB_REPOSITORY: ${{ vars.TRIVY_DB_REPOSITORY }}
      with:
        docker_image: "${{ env.DOCKER_SLUG }}:latest"
        dockerfile_path: "ci/Dockerfile"
        sbom_name: "notification-document-download-api"
        token: "${{ secrets.GITHUB_TOKEN }}"

    - name: Notify Slack channel if this job failed
      if: ${{ failure() }}
      run: |
        json="{'text':'<!here> CI is failing in <https://github.com/cds-snc/notification-document-download-api/|notification-document-download-api> !'}"
        curl -X POST -H 'Content-type: application/json' --data "$json"  ${{ secrets.SLACK_WEBHOOK }}
