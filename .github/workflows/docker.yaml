name: Build, push to AWS ECR, and deploy
on:
  push:
    branches:
      - main

env:
  AWS_REGION: ca-central-1
  DOCKER_ORG: public.ecr.aws/cds-snc
  DOCKER_SLUG: public.ecr.aws/cds-snc/notify-document-download-api
  KUBECTL_VERSION: '1.18.0'

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Build and push
    steps:
    - uses: actions/checkout@v2
    - name: Install AWS CLI
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip -q awscliv2.zip
        sudo ./aws/install --update
        aws --version
    - name: Install kubectl
      run: |
        curl -LO https://storage.googleapis.com/kubernetes-release/release/v$KUBECTL_VERSION/bin/linux/amd64/kubectl
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl
        kubectl version --client
        mkdir -p $HOME/.kube
    - name: AWS auth with ECR
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
      run: |
        aws ecr-public get-login-password --region us-east-1 > /tmp/aws
        cat /tmp/aws | docker login --username AWS --password-stdin $DOCKER_ORG
        rm /tmp/aws
    - name: Build
      run: |
        docker build --build-arg GIT_SHA=${GITHUB_SHA::7} -t $DOCKER_SLUG:${GITHUB_SHA::7} -t $DOCKER_SLUG:latest -f ci/Dockerfile .
    - name: Publish
      run: |
        docker push $DOCKER_SLUG:latest && docker push $DOCKER_SLUG:${GITHUB_SHA::7}
    - name: Get Kubernetes configuration
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws eks --region $AWS_REGION update-kubeconfig --name notification-canada-ca-staging-eks-cluster --kubeconfig $HOME/.kube/config
    - name: Update image in staging
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        kubectl set image deployment.apps/document-download-api document-download-api=$DOCKER_SLUG:${GITHUB_SHA::7} -n=notification-canada-ca --kubeconfig=$HOME/.kube/config

    - name: my-app-install token
      id: notify-pr-bot
      uses: getsentry/action-github-app-token@v1
      with:
        app_id: ${{ secrets.PRBOT_APP_ID }}
        private_key: ${{ secrets.PRBOT_PRIVATE_KEY }}

    - uses: cds-snc/notification-pr-bot@main
      env:
        TOKEN: ${{ steps.notify-pr-bot.outputs.token }}

    - name: Generate docker SBOM
      uses: cds-snc/security-tools/.github/actions/generate-sbom@14ab23f07437d642594c56003db1f4bd34e54bbb # renovate: tag=v1
      with:
        dependency_track_api_key: ${{ secrets.DEPENDENCY_TRACK_API_KEY }}
        docker_image: $DOCKER_SLUG:${GITHUB_SHA::7}
        project_name: notification-document-download-api/docker
        project_type: docker        
